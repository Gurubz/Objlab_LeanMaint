//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AppLeanMaint.PlanningWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PlanningSoap", Namespace="http://objlab.it/")]
    public partial class Planning : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetOrderTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Planning() {
            this.Url = "http://dev1.objlab.it/WS/Planning.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrderTypesCompletedEventHandler GetOrderTypesCompleted;
        
        /// <remarks/>
        public event CreateOperatorCompletedEventHandler CreateOperatorCompleted;
        
        /// <remarks/>
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        /// <remarks/>
        public event GetOrderCompletedEventHandler GetOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://objlab.it/GetOrderTypes", RequestNamespace="http://objlab.it/", ResponseNamespace="http://objlab.it/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderType[] GetOrderTypes() {
            object[] results = this.Invoke("GetOrderTypes", new object[0]);
            return ((OrderType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderTypesAsync() {
            this.GetOrderTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetOrderTypesAsync(object userState) {
            if ((this.GetOrderTypesOperationCompleted == null)) {
                this.GetOrderTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderTypesOperationCompleted);
            }
            this.InvokeAsync("GetOrderTypes", new object[0], this.GetOrderTypesOperationCompleted, userState);
        }
        
        private void OnGetOrderTypesOperationCompleted(object arg) {
            if ((this.GetOrderTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderTypesCompleted(this, new GetOrderTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://objlab.it/CreateOperator", RequestNamespace="http://objlab.it/", ResponseNamespace="http://objlab.it/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOperator(string sUsername, string sPassword, string sName, string sLastName, string sEmail, string sMobile, OperatorTypeEnum eType) {
            object[] results = this.Invoke("CreateOperator", new object[] {
                        sUsername,
                        sPassword,
                        sName,
                        sLastName,
                        sEmail,
                        sMobile,
                        eType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOperatorAsync(string sUsername, string sPassword, string sName, string sLastName, string sEmail, string sMobile, OperatorTypeEnum eType) {
            this.CreateOperatorAsync(sUsername, sPassword, sName, sLastName, sEmail, sMobile, eType, null);
        }
        
        /// <remarks/>
        public void CreateOperatorAsync(string sUsername, string sPassword, string sName, string sLastName, string sEmail, string sMobile, OperatorTypeEnum eType, object userState) {
            if ((this.CreateOperatorOperationCompleted == null)) {
                this.CreateOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperatorOperationCompleted);
            }
            this.InvokeAsync("CreateOperator", new object[] {
                        sUsername,
                        sPassword,
                        sName,
                        sLastName,
                        sEmail,
                        sMobile,
                        eType}, this.CreateOperatorOperationCompleted, userState);
        }
        
        private void OnCreateOperatorOperationCompleted(object arg) {
            if ((this.CreateOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOperatorCompleted(this, new CreateOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://objlab.it/CreateOrder", RequestNamespace="http://objlab.it/", ResponseNamespace="http://objlab.it/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrder(Order oOrder) {
            object[] results = this.Invoke("CreateOrder", new object[] {
                        oOrder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderAsync(Order oOrder) {
            this.CreateOrderAsync(oOrder, null);
        }
        
        /// <remarks/>
        public void CreateOrderAsync(Order oOrder, object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        oOrder}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderOperationCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new CreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://objlab.it/GetOrder", RequestNamespace="http://objlab.it/", ResponseNamespace="http://objlab.it/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Order GetOrder(int nID_Order) {
            object[] results = this.Invoke("GetOrder", new object[] {
                        nID_Order});
            return ((Order)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderAsync(int nID_Order) {
            this.GetOrderAsync(nID_Order, null);
        }
        
        /// <remarks/>
        public void GetOrderAsync(int nID_Order, object userState) {
            if ((this.GetOrderOperationCompleted == null)) {
                this.GetOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderOperationCompleted);
            }
            this.InvokeAsync("GetOrder", new object[] {
                        nID_Order}, this.GetOrderOperationCompleted, userState);
        }
        
        private void OnGetOrderOperationCompleted(object arg) {
            if ((this.GetOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderCompleted(this, new GetOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://objlab.it/")]
    public partial class OrderType {
        
        private int iD_OrderTypeField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int ID_OrderType {
            get {
                return this.iD_OrderTypeField;
            }
            set {
                this.iD_OrderTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://objlab.it/")]
    public partial class Order {
        
        private int iD_OrderField;
        
        private string descriptionField;
        
        private int iD_OrderTypeField;
        
        private System.DateTime requestedAtField;
        
        private System.DateTime plannedForField;
        
        private System.DateTime toCompleteBeforeField;
        
        private bool completedField;
        
        /// <remarks/>
        public int ID_Order {
            get {
                return this.iD_OrderField;
            }
            set {
                this.iD_OrderField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ID_OrderType {
            get {
                return this.iD_OrderTypeField;
            }
            set {
                this.iD_OrderTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RequestedAt {
            get {
                return this.requestedAtField;
            }
            set {
                this.requestedAtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PlannedFor {
            get {
                return this.plannedForField;
            }
            set {
                this.plannedForField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ToCompleteBefore {
            get {
                return this.toCompleteBeforeField;
            }
            set {
                this.toCompleteBeforeField = value;
            }
        }
        
        /// <remarks/>
        public bool Completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://objlab.it/")]
    public enum OperatorTypeEnum {
        
        /// <remarks/>
        Level_1,
        
        /// <remarks/>
        Level_2,
        
        /// <remarks/>
        Level_3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOrderTypesCompletedEventHandler(object sender, GetOrderTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateOperatorCompletedEventHandler(object sender, CreateOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateOrderCompletedEventHandler(object sender, CreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOrderCompletedEventHandler(object sender, GetOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591